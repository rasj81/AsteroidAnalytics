id: 3-IngestData
namespace: meteorite
description: |
  The CSV Data used: "https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv?accessType=DOWNLOAD"
  The Zipped File: "https://github.com/rasj81/MeteoriteAnalytics/raw/refs/heads/main/dataset/Meteorite_Landings.gz"

## WIP - rewrite code for table structure.  Left off at line 111

# Num  Column       Non-Null Count  File-Dtype   BQ-Dtype 
# ---  ------       --------------  -----        -----
#  0   name         45716 non-null  object       Text
#  1   id           45716 non-null  int64        Text
#  2   nametype     45716 non-null  object       Text
#  3   recclass     45716 non-null  object       Text
#  4   mass (g)     45585 non-null  float64      Number 
#  5   fall         45716 non-null  object       Text
#  6   year         45425 non-null  float64      Floating Timestamp
#  7   reclat       38401 non-null  float64      Text
#  8   reclong      38401 non-null  float64      Text
#  9   GeoLocation  38401 non-null  object       Location


variables:
  src_file: "https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv?accessType=DOWNLOAD"
  file: "meteorite_landings_tmp.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.file}}"
  table: "{{kv('GCP_DATASET')}}.meteorite_landings"
  data: "{{outputs.extract.outputFiles[vars.file ~ '_ext' ~ '.csv']}}"
  
tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"

  - id: extract_data
    type: io.kestra.plugin.core.http.Download
    uri: "{{render(vars.src_file)}}"

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{ outputs.extract_data.uri }}"
    to: "{{render(vars.gcs_file)}}"

  - id: bq_meteorite_data
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.meteorite_data`
      (
          id STRING OPTIONS (description = 'A number assigned to the meteorite'),
          name STRING OPTIONS (description = 'A name given to the meterite'),
          nametype STRING OPTIONS (description = 'The type of name assigned to the meteorite. Valid or Relict'),
          recclass STRING OPTIONS (description = 'The classification of the meteorite.'),
          mass FLOAT64 OPTIONS (description = 'The mass of the meteorite in grams.'),
          fall STRING OPTIONS (description = 'The status of the meteorite. Fell or Found'),
          year STRING OPTIONS (description = 'The year the meteorite fell or was found'),
          reclat STRING OPTIONS (description = 'The latitude where the meteorite fell'),
          reclong STRING OPTIONS (description = 'The longitude where the meteorite fell'),
          geolocation STRING OPTIONS (description = 'The geographic coordinates where the meteorite fell'),
          filename STRING OPTIONS (description = 'The source filename from which the trip data was loaded.'),      
          unique_row_id BYTES OPTIONS (description = 'A unique identifier generated by hashing key trip attributes.')
      )
      CLUSTER BY fall, year, recclass;

  - id: bq_meteorite_table_ext
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE EXTERNAL TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`
      (
          id STRING OPTIONS (description = 'A number assigned to the meteorite'),
          name STRING OPTIONS (description = 'A name given to the meterite'),
          nametype STRING OPTIONS (description = 'The type of name assigned to the meteorite. Valid or Relict'),
          recclass STRING OPTIONS (description = 'The classification of the meteorite.'),
          mass FLOAT64 OPTIONS (description = 'The mass of the meteorite in grams.'),
          fall STRING OPTIONS (description = 'The status of the meteorite. Fell or Found'),
          year STRING OPTIONS (description = 'The year the meteorite fell'),
          reclat STRING OPTIONS (description = 'The latitude where the meteorite fell'),
          reclong STRING OPTIONS (description = 'The longitude where the meteorite fell'),
          geolocation STRING OPTIONS (description = 'The geographic coordinates where the meteorite fell')
      )
      OPTIONS (
          format = 'CSV',
          uris = ['{{render(vars.gcs_file)}}'],
          skip_leading_rows = 1,
          ignore_unknown_values = TRUE
      );

  - id: bq_meteorite_table_tmp
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`
      AS
      SELECT 
        MD5(CONCAT(
          COALESCE(CAST(id AS STRING), ""),
          COALESCE(CAST(name AS STRING), ""),
          COALESCE(CAST(geolocation AS STRING), "")
        )) AS unique_row_id,
        "{{render(vars.file)}}" AS filename,
        *
      FROM `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;

  - id: bq_meteroite_merge
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      MERGE INTO `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.meteorite_data` T
      USING `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}` S
      ON T.unique_row_id = S.unique_row_id
      WHEN NOT MATCHED THEN
        INSERT (id, name, nametype, recclass, mass, fall, year, reclat, reclong, geolocation, filename, unique_row_id)
        VALUES (S.id, S.name, S.nametype, S.recclass, S.mass, S.fall, S.year, S.reclat, S.reclong, S.geolocation, S.filename, S.unique_row_id);

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: If you'd like to explore Kestra outputs, disable it.
    disabled: false

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"